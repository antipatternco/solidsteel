# Scaffolding generated by Casein v5.1.1.5

module Casein
  class TracksController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Tracks'
  		@tracks = Track.order(sort_order(:title)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View track'
      @track = Track.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new track'
    	@track = Track.new
    end

    def create
      @track = Track.new track_params
    
      if @track.save
        flash[:notice] = 'Track created'
        redirect_to casein_tracks_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new track'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update track'
      
      @track = Track.find params[:id]
    
      if @track.update_attributes track_params
        flash[:notice] = 'Track has been updated'
        redirect_to casein_tracks_path
      else
        flash.now[:warning] = 'There were problems when trying to update this track'
        render :action => :show
      end
    end
 
    def destroy
      @track = Track.find params[:id]

      @track.destroy
      flash[:notice] = 'Track has been deleted'
      redirect_to casein_tracks_path
    end
  
    private
      
      def track_params
        params.require(:track).permit(:title, :artist, :record_label)
      end

  end
end